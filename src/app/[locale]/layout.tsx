import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import localFont from "next/font/local";
import Header from "@/components/Header/index";
import "@/styles/global.css";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";

const onest = localFont({
  src: "../../fonts/Onest-VariableFont_wght.ttf",
  display: "swap",
  variable: "--font-onest",
  weight: "100 900",
  style: "normal",
});

const neutralFace = localFont({
  src: "../../fonts/NeutralFace-Bold.ttf",
});

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Кафедра Цифровых и аддитивных технологий",
  description: "Generated by create next app",
};

export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale}>
      <body className={`${onest.variable} ${neutralFace.className}`}>
        <NextIntlClientProvider>
          <Header></Header>
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
